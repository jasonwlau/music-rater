{"ast":null,"code":"var _jsxFileName = \"/Users/jason/code/frontend/src/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst Button = ({\n  handleClick,\n  text\n}) => {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, text);\n};\n\nconst Song = ({\n  link\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"iframe\", {\n    title: \"pog\",\n    src: link,\n    width: \"300\",\n    height: \"80\",\n    frameborder: \"0\",\n    allowtransparency: \"true\",\n    allow: \"encrypted-media\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst App = () => {\n  const [songs, setSongs] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [newSong, setNewSong] = useState('');\n  const [song1, setSong1] = useState(0);\n  const [song2, setSong2] = useState(0);\n\n  const getRandomInt = max => {\n    return Math.floor(Math.random() * Math.floor(max));\n  };\n\n  useEffect(() => {\n    fetch(\"http://localhost:3001/songs\").then(res => res.json()).then(result => {\n      setSongs(result);\n      setIsLoaded(true);\n      const n1 = getRandomInt(result.length);\n      setSong1(getRandomInt(n1));\n      let n2 = getRandomInt(result.length);\n\n      while (n2 === n1 & result.length > 2) {\n        n2 = getRandomInt(result.length);\n      }\n\n      setSong2(n2);\n    });\n  }, []);\n\n  const probability = (a, b) => {\n    return 1 / (1 + Math.pow(10, (a - b) / 400));\n  };\n\n  const updateElo = (a, b) => {\n    const a_old = songs[a].rating;\n    const b_old = songs[b].rating;\n    const a_new = a_old + 20 * (1 - probability(b_old, a_old));\n    const b_new = b_old + 20 * (0 - probability(a_old, b_old));\n    const url1 = `http://localhost:3001/songs/${a}`;\n    const s1 = songs[a];\n    console.log(s1);\n    const updated_s1 = { ...s1,\n      rating: a_new\n    };\n    console.log(updated_s1); // fetch(url1, {\n    //   method: 'PUT',\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //   },\n    //   body: JSON.stringify(updated_s1)\n    // }).then(response => {\n    //   setSongs(songs.map(song => song.id !== a+1 ? song : response.data))\n    // })\n  };\n\n  const updateSongs = () => {\n    const n1 = getRandomInt(songs.length);\n    const n2 = getRandomInt(songs.length);\n    setSong1(n1);\n    setSong2(n2);\n  };\n\n  const pog1 = () => {\n    updateElo(song1, song2);\n    updateSongs();\n  };\n\n  const pog2 = () => {\n    updateElo(song2, song1);\n    updateSongs();\n  };\n\n  const addSong = event => {\n    event.preventDefault();\n    const n = newSong.indexOf('/track/');\n    const songLink = newSong.substr(0, n) + '/embed' + newSong.substr(n);\n    const songObject = {\n      link: songLink\n    };\n    fetch(\"http://localhost:3001/songs\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(songObject)\n    }).then(response => {\n      console.log(response);\n      setSongs(songs.concat(response.data));\n      setNewSong('');\n    });\n  };\n\n  const handleSongChange = event => {\n    setNewSong(event.target.value);\n  };\n\n  if (!isLoaded) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }, \"pog\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"fixed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, \"Song 1\"), /*#__PURE__*/React.createElement(Song, {\n      link: songs[song1].link,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      handleClick: pog1,\n      text: \"pog1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"grow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, \"Song 2\"), /*#__PURE__*/React.createElement(Song, {\n      link: songs[song2].link,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      handleClick: pog2,\n      text: \"pog2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: addSong,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: newSong,\n      onChange: handleSongChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    }, \"Add\")));\n  }\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/jason/code/frontend/src/index.js"],"names":["React","useState","useEffect","ReactDOM","Button","handleClick","text","Song","link","App","songs","setSongs","isLoaded","setIsLoaded","newSong","setNewSong","song1","setSong1","song2","setSong2","getRandomInt","max","Math","floor","random","fetch","then","res","json","result","n1","length","n2","probability","a","b","pow","updateElo","a_old","rating","b_old","a_new","b_new","url1","s1","console","log","updated_s1","updateSongs","pog1","pog2","addSong","event","preventDefault","n","indexOf","songLink","substr","songObject","method","headers","body","JSON","stringify","response","concat","data","handleSongChange","target","value","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\n\nconst Button = ({handleClick, text}) => {\n  return (\n    <button onClick = {handleClick}>\n      {text}\n    </button>\n  )\n}\n\nconst Song = ({link}) => {\n  return (\n    <>\n      <iframe title = \"pog\" src={link} width=\"300\" height=\"80\" frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\n      <br/>\n    </>\n  )\n}\n\nconst App = () => {\n  const [songs, setSongs] = useState([])\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [newSong, setNewSong] = useState('')\n  const [song1, setSong1] = useState(0)\n  const [song2, setSong2] = useState(0)\n\n  const getRandomInt = (max) => {return Math.floor(Math.random() * Math.floor(max))}\n\n  useEffect(() => {\n    fetch(\"http://localhost:3001/songs\")\n    .then(res => res.json())\n    .then((result) => {\n      setSongs(result)\n      setIsLoaded(true)\n      const n1 = getRandomInt(result.length)\n      setSong1(getRandomInt(n1))\n      let n2 = getRandomInt(result.length)\n      while (n2 === n1 & result.length > 2) {\n        n2 = getRandomInt(result.length)\n      }\n      setSong2(n2)\n    })\n  }, [])\n  \n  const probability = (a, b) => {\n    return 1/(1+Math.pow(10, (a-b)/400))\n  }\n\n  const updateElo = (a, b) => {\n    const a_old = songs[a].rating\n    const b_old = songs[b].rating\n    const a_new = a_old + 20 * (1-probability(b_old, a_old))\n    const b_new = b_old + 20 * (0-probability(a_old, b_old))\n    const url1 = `http://localhost:3001/songs/${a}`\n    const s1 = songs[a]\n    console.log(s1)\n    const updated_s1 = {...s1, rating: a_new}\n    console.log(updated_s1)\n    // fetch(url1, {\n    //   method: 'PUT',\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //   },\n    //   body: JSON.stringify(updated_s1)\n    // }).then(response => {\n    //   setSongs(songs.map(song => song.id !== a+1 ? song : response.data))\n    // })\n  }\n\n  const updateSongs = () => {\n    const n1 = getRandomInt(songs.length)\n    const n2 = getRandomInt(songs.length)\n    setSong1(n1)\n    setSong2(n2)\n  }\n\n  const pog1 = () => {\n    updateElo(song1, song2)\n    updateSongs()\n  }\n  const pog2 = () => {\n    updateElo(song2, song1)\n    updateSongs()\n  }\n\n  const addSong = (event) => {\n    event.preventDefault()\n    const n = newSong.indexOf('/track/')\n    const songLink = newSong.substr(0, n) + '/embed' + newSong.substr(n)\n    const songObject = {\n      link: songLink\n    }\n    fetch(\"http://localhost:3001/songs\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(songObject)\n    }).then(response => {\n      console.log(response)\n      setSongs(songs.concat(response.data))\n      setNewSong('')\n    })\n  }\n\n  const handleSongChange = (event) => {\n    setNewSong(event.target.value)\n  }\n\n\n  if (!isLoaded) {\n    return <div>Loading...</div>\n  } else {\n    return (\n      <div>\n        <h1>\n          pog\n        </h1>\n        <div class=\"container\">\n          <div class=\"fixed\">\n            <h2>\n              Song 1\n            </h2>\n            <Song link={songs[song1].link}/>\n            <Button handleClick={pog1} text='pog1'/>\n          </div>\n          <div class=\"grow\">\n            <h2>\n              Song 2\n            </h2>\n            <Song link={songs[song2].link}/>\n            <Button handleClick={pog2} text='pog2'/>\n          </div>\n        </div>\n        <form onSubmit={addSong}>\n          <input \n            value={newSong}\n            onChange={handleSongChange}\n          />\n          <button type=\"submit\">Add</button>\n        </form>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}